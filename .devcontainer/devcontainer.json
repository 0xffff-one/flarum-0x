// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/php-mariadb
{
	"name": "PHP & MariaDB",
	"dockerComposeFile": [
		"docker-compose.yml"
		// uncomment next line to build image locally
		// "docker-compose.build.yml"
    ],
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": "true",
			"configureZshAsDefaultShell": "true",
			"username": "vscode",
			"userUid": "1000",
			"userGid": "1000",
			"upgradePackages": "true"
		},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"moby": false
		},
		"ghcr.io/devcontainers/features/node:1": {
			"version": "lts"
		}
	},
	// from: https://github.com/devcontainers/images/blob/4ea2ed96dc80d4baebd0eef1efceeb27e33a3aef/src/php/.devcontainer/devcontainer.json
	"overrideFeatureInstallOrder": [
		"ghcr.io/devcontainers/features/common-utils"
	],
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"php.validate.executablePath": "/usr/local/bin/php",
				"remote.autoForwardPorts": false
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"xdebug.php-debug",
				"bmewburn.vscode-intelephense-client",
				"mrmlnc.vscode-apache",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker"
			]
		}
	},
	// For use with PHP or Apache (e.g.php -S localhost:8080 or apache2ctl start)
	"forwardPorts": [
		8080,
		3306
	],
	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	// Use 'postCreateCommand' to run commands after the container is created.
	// Restrict deps installation to first initialization, in which case the verdor directory doesn't exist locally
	"postCreateCommand": "[ ! -d vendor ] && composer install; true",
	// Use 'postStartCommand' to run commands each time the container is successfully started.
	"postStartCommand": "start"
}
